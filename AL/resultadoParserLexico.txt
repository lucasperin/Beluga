Compilador Beluga - 2013/1
Lendo do arquivo ClassesTeste.blg . . .
Linha: 9 Coluna: 1 classe  classe  13
Linha: 9 Coluna: 8 Ponto  <IDENT>  36
Linha: 10 Coluna: 1 {  {  42
Linha: 11 Coluna: 9 inteiro  inteiro  20
Linha: 11 Coluna: 17 x_  <IDENT>  36
Linha: 11 Coluna: 19 ;  ;  46
Linha: 12 Coluna: 9 inteiro  inteiro  20
Linha: 12 Coluna: 17 y_  <IDENT>  36
Linha: 12 Coluna: 19 ;  ;  46
Linha: 14 Coluna: 9 construtor  construtor  14
Linha: 14 Coluna: 19 (  (  40
Linha: 14 Coluna: 20 inteiro  inteiro  20
Linha: 14 Coluna: 28 x  <IDENT>  36
Linha: 14 Coluna: 29 ,  ,  47
Linha: 14 Coluna: 31 inteiro  inteiro  20
Linha: 14 Coluna: 39 y  <IDENT>  36
Linha: 14 Coluna: 40 )  )  41
Linha: 15 Coluna: 9 {  {  42
Linha: 16 Coluna: 17 x_  <IDENT>  36
Linha: 16 Coluna: 20 =  =  51
Linha: 16 Coluna: 22 x  <IDENT>  36
Linha: 16 Coluna: 23 ;  ;  46
Linha: 17 Coluna: 17 y_  <IDENT>  36
Linha: 17 Coluna: 20 =  =  51
Linha: 17 Coluna: 22 y  <IDENT>  36
Linha: 17 Coluna: 23 ;  ;  46
Linha: 18 Coluna: 9 }  }  43
Linha: 20 Coluna: 9 imprimir  imprimir  22
Linha: 20 Coluna: 17 (  (  40
Linha: 20 Coluna: 18 )  )  41
Linha: 21 Coluna: 9 {  {  42
Linha: 22 Coluna: 17 imprimir  imprimir  22
Linha: 22 Coluna: 26 "("  <string_constant>  34
Linha: 22 Coluna: 30 +  +  58
Linha: 22 Coluna: 32 x_  <IDENT>  36
Linha: 22 Coluna: 35 +  +  58
Linha: 22 Coluna: 37 ","  <string_constant>  34
Linha: 22 Coluna: 41 +  +  58
Linha: 22 Coluna: 43 y_  <IDENT>  36
Linha: 22 Coluna: 46 +  +  58
Linha: 22 Coluna: 48 ")"  <string_constant>  34
Linha: 22 Coluna: 51 ;  ;  46
Linha: 23 Coluna: 9 }  }  43
Linha: 24 Coluna: 1 }  }  43
Linha: 26 Coluna: 1 classe  classe  13
Linha: 26 Coluna: 8 Circulo  <IDENT>  36
Linha: 26 Coluna: 16 herda  herda  16
Linha: 26 Coluna: 22 Ponto  <IDENT>  36
Linha: 27 Coluna: 1 {  {  42
Linha: 28 Coluna: 9 inteiro  inteiro  20
Linha: 28 Coluna: 17 r_  <IDENT>  36
Linha: 28 Coluna: 19 ;  ;  46
Linha: 30 Coluna: 9 construtor  construtor  14
Linha: 30 Coluna: 19 (  (  40
Linha: 30 Coluna: 20 inteiro  inteiro  20
Linha: 30 Coluna: 28 r  <IDENT>  36
Linha: 30 Coluna: 29 ,  ,  47
Linha: 30 Coluna: 31 inteiro  inteiro  20
Linha: 30 Coluna: 39 x  <IDENT>  36
Linha: 30 Coluna: 40 ,  ,  47
Linha: 30 Coluna: 42 inteiro  inteiro  20
Linha: 30 Coluna: 50 y  <IDENT>  36
Linha: 30 Coluna: 51 )  )  41
Linha: 31 Coluna: 9 {  {  42
Linha: 32 Coluna: 17 super  super  26
Linha: 32 Coluna: 23 construtor  construtor  14
Linha: 32 Coluna: 33 (  (  40
Linha: 32 Coluna: 34 x  <IDENT>  36
Linha: 32 Coluna: 35 ,  ,  47
Linha: 32 Coluna: 37 y  <IDENT>  36
Linha: 32 Coluna: 38 )  )  41
Linha: 32 Coluna: 39 ;  ;  46
Linha: 33 Coluna: 17 r_  <IDENT>  36
Linha: 33 Coluna: 20 =  =  51
Linha: 33 Coluna: 22 r  <IDENT>  36
Linha: 33 Coluna: 23 ;  ;  46
Linha: 34 Coluna: 9 }  }  43
Linha: 36 Coluna: 9 imprimir  imprimir  22
Linha: 36 Coluna: 17 (  (  40
Linha: 36 Coluna: 18 )  )  41
Linha: 37 Coluna: 9 {  {  42
Linha: 38 Coluna: 17 imprimir  imprimir  22
Linha: 38 Coluna: 26 "("  <string_constant>  34
Linha: 38 Coluna: 30 +  +  58
Linha: 38 Coluna: 32 x_  <IDENT>  36
Linha: 38 Coluna: 35 +  +  58
Linha: 38 Coluna: 37 ","  <string_constant>  34
Linha: 38 Coluna: 41 +  +  58
Linha: 38 Coluna: 43 y_  <IDENT>  36
Linha: 38 Coluna: 46 +  +  58
Linha: 38 Coluna: 48 ") com raio "  <string_constant>  34
Linha: 38 Coluna: 62 +  +  58
Linha: 38 Coluna: 64 r_  <IDENT>  36
Linha: 38 Coluna: 66 ;  ;  46
Linha: 39 Coluna: 9 }  }  43
Linha: 40 Coluna: 1 }  }  43
Linha: 42 Coluna: 1 classe  classe  13
Linha: 42 Coluna: 8 Teste  <IDENT>  36
Linha: 43 Coluna: 1 {  {  42
Linha: 44 Coluna: 9 texto  texto  25
Linha: 44 Coluna: 15 tipoString  <IDENT>  36
Linha: 44 Coluna: 25 ;  ;  46
Linha: 45 Coluna: 9 cara_coroa  cara_coroa  27
Linha: 45 Coluna: 20 tipoBoleano  <IDENT>  36
Linha: 45 Coluna: 31 ;  ;  46
Linha: 46 Coluna: 9 inteiro  inteiro  20
Linha: 46 Coluna: 17 tipoInt  <IDENT>  36
Linha: 46 Coluna: 24 ;  ;  46
Linha: 48 Coluna: 9 testeParaSemChave  <IDENT>  36
Linha: 48 Coluna: 26 (  (  40
Linha: 48 Coluna: 27 )  )  41
Linha: 49 Coluna: 9 {  {  42
Linha: 50 Coluna: 17 para  para  17
Linha: 50 Coluna: 22 (  (  40
Linha: 50 Coluna: 24 inteiro  inteiro  20
Linha: 50 Coluna: 32 i  <IDENT>  36
Linha: 50 Coluna: 34 =  =  51
Linha: 50 Coluna: 36 0  <int_constant>  33
Linha: 50 Coluna: 37 ;  ;  46
Linha: 50 Coluna: 39 i  <IDENT>  36
Linha: 50 Coluna: 41 <  <  53
Linha: 50 Coluna: 43 10  <int_constant>  33
Linha: 50 Coluna: 45 ;  ;  46
Linha: 50 Coluna: 47 i  <IDENT>  36
Linha: 50 Coluna: 49 =  =  51
Linha: 50 Coluna: 51 i  <IDENT>  36
Linha: 50 Coluna: 53 +  +  58
Linha: 50 Coluna: 55 1  <int_constant>  33
Linha: 50 Coluna: 56 )  )  41
Linha: 51 Coluna: 25 imprimir  imprimir  22
Linha: 51 Coluna: 34 "teste"  <string_constant>  34
Linha: 51 Coluna: 41 ;  ;  46
Linha: 52 Coluna: 9 }  }  43
Linha: 54 Coluna: 9 testePara  <IDENT>  36
Linha: 54 Coluna: 18 (  (  40
Linha: 54 Coluna: 19 )  )  41
Linha: 55 Coluna: 9 {  {  42
Linha: 56 Coluna: 17 para  para  17
Linha: 56 Coluna: 22 (  (  40
Linha: 56 Coluna: 24 inteiro  inteiro  20
Linha: 56 Coluna: 32 i  <IDENT>  36
Linha: 56 Coluna: 34 =  =  51
Linha: 56 Coluna: 36 0  <int_constant>  33
Linha: 56 Coluna: 37 ;  ;  46
Linha: 56 Coluna: 39 i  <IDENT>  36
Linha: 56 Coluna: 41 <  <  53
Linha: 56 Coluna: 43 10  <int_constant>  33
Linha: 56 Coluna: 45 ;  ;  46
Linha: 56 Coluna: 47 i  <IDENT>  36
Linha: 56 Coluna: 49 =  =  51
Linha: 56 Coluna: 51 i  <IDENT>  36
Linha: 56 Coluna: 53 +  +  58
Linha: 56 Coluna: 55 1  <int_constant>  33
Linha: 56 Coluna: 56 )  )  41
Linha: 57 Coluna: 17 {  {  42
Linha: 58 Coluna: 25 imprimir  imprimir  22
Linha: 58 Coluna: 34 "teste"  <string_constant>  34
Linha: 58 Coluna: 41 ;  ;  46
Linha: 59 Coluna: 17 }  }  43
Linha: 60 Coluna: 9 }  }  43
Linha: 62 Coluna: 9 testeEnquando  <IDENT>  36
Linha: 62 Coluna: 22 (  (  40
Linha: 62 Coluna: 23 )  )  41
Linha: 63 Coluna: 9 {  {  42
Linha: 64 Coluna: 17 enquanto  enquanto  30
Linha: 64 Coluna: 25 (  (  40
Linha: 64 Coluna: 26 cara  cara  28
Linha: 64 Coluna: 30 )  )  41
Linha: 65 Coluna: 17 {  {  42
Linha: 66 Coluna: 25 imprimir  imprimir  22
Linha: 66 Coluna: 34 "teste"  <string_constant>  34
Linha: 66 Coluna: 41 ;  ;  46
Linha: 67 Coluna: 17 }  }  43
Linha: 68 Coluna: 9 }  }  43
Linha: 70 Coluna: 9 testeTrocar  <IDENT>  36
Linha: 70 Coluna: 20 (  (  40
Linha: 70 Coluna: 21 )  )  41
Linha: 71 Coluna: 9 {  {  42
Linha: 72 Coluna: 17 inteiro  inteiro  20
Linha: 72 Coluna: 25 i  <IDENT>  36
Linha: 72 Coluna: 26 ;  ;  46
Linha: 73 Coluna: 17 i  <IDENT>  36
Linha: 73 Coluna: 19 =  =  51
Linha: 73 Coluna: 21 2  <int_constant>  33
Linha: 73 Coluna: 22 ;  ;  46
Linha: 74 Coluna: 17 trocar  trocar  31
Linha: 74 Coluna: 23 (  (  40
Linha: 74 Coluna: 24 i  <IDENT>  36
Linha: 74 Coluna: 25 )  )  41
Linha: 75 Coluna: 17 {  {  42
Linha: 76 Coluna: 17 caso  caso  32
Linha: 76 Coluna: 22 1  <int_constant>  33
Linha: 76 Coluna: 23 :  :  49
Linha: 77 Coluna: 25 imprimir  imprimir  22
Linha: 77 Coluna: 34 "trocar caiu no caso errado"  <string_constant>  34
Linha: 77 Coluna: 62 ;  ;  46
Linha: 78 Coluna: 25 parar  parar  12
Linha: 78 Coluna: 30 ;  ;  46
Linha: 79 Coluna: 17 caso  caso  32
Linha: 79 Coluna: 22 2  <int_constant>  33
Linha: 79 Coluna: 23 :  :  49
Linha: 80 Coluna: 25 imprimir  imprimir  22
Linha: 80 Coluna: 34 "trocar caiu no caso correto"  <string_constant>  34
Linha: 80 Coluna: 63 ;  ;  46
Linha: 81 Coluna: 25 parar  parar  12
Linha: 81 Coluna: 30 ;  ;  46
Linha: 82 Coluna: 17 }  }  43
Linha: 83 Coluna: 9 }  }  43
Linha: 85 Coluna: 9 testeMetodoSemChave  <IDENT>  36
Linha: 85 Coluna: 28 (  (  40
Linha: 85 Coluna: 29 )  )  41
Linha: 86 Coluna: 17 imprimir  imprimir  22
Linha: 86 Coluna: 26 "metodo se chave!"  <string_constant>  34
Linha: 86 Coluna: 44 ;  ;  46
Linha: 88 Coluna: 9 testeSeEntao  <IDENT>  36
Linha: 88 Coluna: 21 (  (  40
Linha: 88 Coluna: 22 )  )  41
Linha: 89 Coluna: 9 {  {  42
Linha: 90 Coluna: 17 se  se  18
Linha: 90 Coluna: 20 (  (  40
Linha: 90 Coluna: 21 1  <int_constant>  33
Linha: 90 Coluna: 22 ==  ==  54
Linha: 90 Coluna: 24 1  <int_constant>  33
Linha: 90 Coluna: 25 )  )  41
Linha: 90 Coluna: 27 entao  entao  19
Linha: 91 Coluna: 17 {  {  42
Linha: 92 Coluna: 25 imprimir  imprimir  22
Linha: 92 Coluna: 34 "comando se"  <string_constant>  34
Linha: 92 Coluna: 46 ;  ;  46
Linha: 93 Coluna: 25 se  se  18
Linha: 93 Coluna: 28 (  (  40
Linha: 93 Coluna: 29 2  <int_constant>  33
Linha: 93 Coluna: 31 >  >  52
Linha: 93 Coluna: 33 1  <int_constant>  33
Linha: 93 Coluna: 34 )  )  41
Linha: 93 Coluna: 36 entao  entao  19
Linha: 94 Coluna: 25 {  {  42
Linha: 95 Coluna: 33 imprimir  imprimir  22
Linha: 95 Coluna: 42 "se aninhado"  <string_constant>  34
Linha: 95 Coluna: 55 ;  ;  46
Linha: 96 Coluna: 25 }  }  43
Linha: 97 Coluna: 17 }  }  43
Linha: 97 Coluna: 19 senao  senao  15
Linha: 97 Coluna: 25 {  {  42
Linha: 98 Coluna: 25 imprimir  imprimir  22
Linha: 98 Coluna: 34 "comando senao"  <string_constant>  34
Linha: 98 Coluna: 49 ;  ;  46
Linha: 99 Coluna: 17 }  }  43
Linha: 101 Coluna: 9 }  }  43
Linha: 103 Coluna: 9 testeAtribuicaoCondicional  <IDENT>  36
Linha: 103 Coluna: 35 (  (  40
Linha: 103 Coluna: 36 )  )  41
Linha: 104 Coluna: 9 {  {  42
Linha: 105 Coluna: 17 Ponto  <IDENT>  36
Linha: 105 Coluna: 23 p  <IDENT>  36
Linha: 105 Coluna: 25 =  =  51
Linha: 105 Coluna: 27 new  <IDENT>  36
Linha: 105 Coluna: 31 Ponto  <IDENT>  36
Linha: 105 Coluna: 36 (  (  40
Linha: 105 Coluna: 38 2  <int_constant>  33
Linha: 105 Coluna: 39 ,  ,  47
Linha: 105 Coluna: 41 1  <int_constant>  33
Linha: 105 Coluna: 43 )  )  41
Linha: 105 Coluna: 44 ;  ;  46
Linha: 106 Coluna: 17 texto  texto  25
Linha: 106 Coluna: 23 maior  <IDENT>  36
Linha: 106 Coluna: 29 =  =  51
Linha: 106 Coluna: 31 (  (  40
Linha: 106 Coluna: 32 p  <IDENT>  36
Linha: 106 Coluna: 33 .  .  48
Linha: 106 Coluna: 34 x  <IDENT>  36
Linha: 106 Coluna: 36 >  >  52
Linha: 106 Coluna: 38 p  <IDENT>  36
Linha: 106 Coluna: 39 .  .  48
Linha: 106 Coluna: 40 y  <IDENT>  36
Linha: 106 Coluna: 42 )  )  41
Linha: 106 Coluna: 44 ?  ?  50
Linha: 106 Coluna: 46 "X e maior que Y"  <string_constant>  34
Linha: 106 Coluna: 64 :  :  49
Linha: 106 Coluna: 66 "Y e maior que X"  <string_constant>  34
Linha: 106 Coluna: 83 ;  ;  46
Linha: 107 Coluna: 17 imprimir  imprimir  22
Linha: 107 Coluna: 26 texto  texto  25
Linha: 107 Coluna: 31 ;  ;  46
Linha: 108 Coluna: 9 }  }  43
Linha: 109 Coluna: 1 }  }  43
Linha: 129 Coluna: 1   <EOF>  0
Programa analisado corretamente.
